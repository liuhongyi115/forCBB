<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taiji.cloudmp.mhpt.modules.activiti.repository.ActDefRepository">
		
		<sql id="columns">
			id_, rev_, category_, name_, key_, version_, deployment_id_, resource_name_, dgrm_resource_name_, description_,
			has_start_form_key_, has_graphical_notation_, suspension_state_, tenant_id_
		</sql>
	    <sql id="dynamicWhere">
		<where>
			<if test="name != null">
				a.name_ like concat(concat('%', #{name}),'%')
        	</if>
        </where>
	</sql>
	
	<select id="findAll" parameterType="com.taiji.cloudmp.mhpt.modules.activiti.service.dto.ActDefQueryCriteria" resultType="map">
		select a.id_, a.name_, a.key_, a.version_ from act_re_procdef a
			   inner join  
			   ( select key_, max(version_) version from act_re_procdef
		 		 group by key_) b
	  		   on a.version_ = b.version and a.key_ = b.key_
		<include refid="dynamicWhere" />
		<if test="pager.DBPageCondition != null and pager.DBPageCondition != ''">
			${pager.DBPageCondition}
		</if>
	</select>
 
 	<select id="findTotalCount" resultType="java.lang.Long" >
		select count(c.id_)
		from ( select a.id_, a.name_, a.key_, a.version_ from act_re_procdef a
			   inner join  
			   ( select key_, max(version_) version from act_re_procdef
		 		 group by key_) b
	  		   on a.version_ = b.version and a.key_ = b.key_
	  		   <include refid="dynamicWhere" />
	    )c
	</select>
	
	<select id="findLatestByKey" resultType="map" parameterType="java.lang.String">
	    select <include refid="columns" />
	    from act_re_procdef
	    where key_ = #{processKey}
	    order by version_ desc
  </select>
</mapper>