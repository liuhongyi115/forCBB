<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
        namespace="com.taiji.cloudmp.mhpt.modules.system.repository.UserRepository">
    <!-- Result Map -->
    <resultMap id="BaseResultMap"
               type="com.taiji.cloudmp.mhpt.modules.system.domain.User">
        <result column="id" property="id" />
        <result column="username" property="username" />
        <result column="avatar" property="avatar" />
        <result column="email" property="email" />
        <result column="phone" property="phone" />
        <result column="enabled" property="enabled" />
        <result column="password" property="password" />
        <result column="create_time" property="createtime" />
        <result column="last_password_reset_time" property="lastPasswordResetTime" />
        <result column="dept_id" property="dept_id" />
        <result column="job_id" property="job_id" />
    </resultMap>


    <sql id="base_column">
        id,username,avatar,email,phone,enabled,password,create_time,last_password_reset_time,dept_id,job_id
    </sql>

    <sql id="all_column">
        user.id,user.username,user.avatar,user.email,user.phone,user.enabled,user.password,user.create_time,
        user.last_password_reset_time,user.dept_id,user.job_id,dept.name as deptname,dept.pid,dept.create_time as dept_createtime,
        dept.enabled as deptenabled,job.name as jobname,job.enabled as jobenabled,job.create_time as job_creare_time ,job.sort,job.dept_id as job_dept_id
    </sql>
    
    <sql id="where_clause">
        where 1=1
        <trim suffixOverrides=",">
            <if test="id != null id.size > 0 ">
                and id in
                <foreach collection="id" index="index" item="item" open="("
                         separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="username != null and username != ''">
                and username like CONCAT(CONCAT('%', #{username}),'%')
            </if>
            <if test="email != null and email != ''">
                and email like CONCAT(CONCAT('%', #{email}),'%')
            </if>
        </trim>
    </sql>

    <select id="findAllByWhere" resultType="java.util.Map"
            parameterType="Object">
        select
        <include refid="all_column" />
        FROM t_cloudmp_user user join t_cloudmp_dept dept join t_cloudmp_job job on user.dept_id = dept.id and user.job_id = job.id
        <include refid="where_clause" />
    </select>



    <select id="findByWhere" resultMap="BaseResultMap"
            parameterType="Object">
        select
        <include refid="base_column" />
        FROM t_cloudmp_user
        where 1=1
        <if test="deptIds != null and deptIds.size>0">
            and dept_id in
            <foreach collection="deptIds" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="username != null and username != ''">
            and (username like CONCAT(CONCAT('%', #{username}),'%') )

        </if>
        <if test="email != null and email != ''">
            and email like CONCAT(CONCAT('%', #{email}),'%')
        </if>
        <if test="enabled != null ">
            and enabled like CONCAT(CONCAT('%', #{enabled}),'%')
        </if>
        <if test="pager.orderCondition != null and pager.orderCondition != ''">
            ${pager.orderCondition}
        </if>
        <if test="pager.DBPageCondition != null and pager.DBPageCondition != ''">
            ${pager.DBPageCondition}
        </if>
    </select>

    <select id="findByWhereCount" resultType="java.lang.Long" parameterType="Object">
        select count(1)
        FROM t_cloudmp_user
        where 1=1
        <if test="deptIds != null and deptIds.size>0">
            and dept_id in
            <foreach collection="deptIds" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="username != null and username != ''">
            and (username like CONCAT(CONCAT('%', #{username}),'%') )

        </if>
        <if test="email != null and email != ''">
            and email like CONCAT(CONCAT('%', #{email}),'%')
        </if>
        <if test="enabled != null ">
            and enabled like CONCAT(CONCAT('%', #{enabled}),'%')
        </if>
    </select>

    <select id="countbyWhere">
       select count(*)
        FROM t_cloudmp_user
        <include refid="where_clause" />
    </select>

    <select id="findByUsername" resultMap="BaseResultMap"
            parameterType="Object">
        select * from t_cloudmp_user where 1=1
        <if test="name != '' and name != null ">
            and username = #{name}
        </if>
    </select>

    <select id="findUserById" resultMap="BaseResultMap"
            parameterType="Object">
        select * from t_cloudmp_user where 1=1
        <if test="id != '' and id != null ">
            and id = #{id}
        </if>
    </select>

    <select id="findUserByEmail" resultMap="BaseResultMap"
            parameterType="Object">
        select * from t_cloudmp_user where 1=1
        <if test="email != '' and email != null ">
            and email = #{email}
        </if>
    </select>
    
    <select id="getRoleByUserid" resultType="java.util.Map" parameterType="Object">
        select user_id,role_id from t_cloudmp_users_roles
    </select>

    <insert id="addUser" parameterType="Object">
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID()
        </selectKey>
		insert into
		t_cloudmp_user(id,username,avatar,email,phone,enabled,password,create_time,last_password_reset_time,dept_id,job_id)
		values(#{id},#{username},#{avatar},#{email},#{phone},#{enabled},#{password},#{createtime},#{lastPasswordResetTime},#{dept_id},#{job_id})
	</insert>

    <insert id="addRole" parameterType="Object">
        insert into t_cloudmp_users_roles(user_id,role_id) value (#{userid},#{roleid})
    </insert>

    <delete id="deleteRole" parameterType="Object">
		delete 	 from t_cloudmp_users_roles where user_id = #{userid}
	</delete>

    <update id="updateUser" parameterType="Object">
        update t_cloudmp_user set
        <trim suffixOverrides=",">
            <if test="username != null  and username != '' ">
                username=#{username},
            </if>
            <if test="avatar != null ">
                avatar=#{avatar},
            </if>
            <if test="email != null ">
                email=#{email},
            </if>
            <if test="phone != null  and phone != '' ">
                phone=#{phone},
            </if>
            <if test="enabled != null  ">
                enabled=#{enabled},
            </if>
            <if test="password != null  ">
                password=#{password},
            </if>
            <if test="createtime != null  ">
                create_time=#{createtime},
            </if>
            <if test="lastPasswordResetTime != null  ">
                last_password_reset_time=#{lastPasswordResetTime},
            </if>
            <if test="dept_id != null  ">
                dept_id=#{dept_id},
            </if>
            <if test="job_id != null  ">
                job_id=#{job_id},
            </if>
        </trim>
        where id=#{id}
    </update>

    <delete id="deleteUserById" parameterType="Object">
		delete 	 from t_cloudmp_user where id = #{id}
	</delete>

    <update id="updatePass" parameterType="Object">
        update t_cloudmp_user set password = #{pass},last_password_reset_time=#{date} where username=#{username}
    </update>

    <update id="updateAvatar" parameterType="Object">
        update t_cloudmp_user set avatar = #{avatar} where username=#{username}
    </update>

    <update id="updateEmail" parameterType="Object">
        update t_cloudmp_user set email = #{email} where username=#{username}
    </update>

    <select id="getRoleById" resultType="java.util.Map" parameterType="Object">
        select id,name,level,data_scope from t_cloudmp_role where id in (SELECT role_id from t_cloudmp_users_roles where user_id = #{id} ) order by level desc
    </select>

    <select id="getAllRoleByUserid" resultType="java.util.Map" parameterType="Object">
        select * from t_cloudmp_role where id in (SELECT role_id from t_cloudmp_users_roles where user_id = #{id} ) order by level desc
    </select>

    <select id="getJobById" resultType="java.util.Map" parameterType="Object" >
        select name from t_cloudmp_job where id = #{id}
    </select>

    <select id="getDeptById" resultType="java.lang.String" parameterType="Object">
        select name from t_cloudmp_dept where id = #{id}
    </select>

    <select id="findDeptCountByUser" parameterType="java.lang.Object" resultType="java.lang.Long" >
      SELECT COUNT(1) FROM t_cloudmp_user u WHERE dept_id = #{deptId};
    </select>
    
    <select id="findUserCountByJobId" parameterType="java.lang.Object" resultType="java.lang.Long" >
      SELECT COUNT(1) FROM t_cloudmp_user u WHERE job_id = #{jobId};
    </select>




</mapper>
